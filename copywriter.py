# copywriter.py - –í–µ—Ä—Å–∏—è 2.0. –ï–≤–∞ –°–æ–∫–æ–ª–æ–≤–∞ —Å API –Ω–∞ FastAPI.
# –ì–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –æ—Ç –®–µ—Ñ–∞ –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å –∏—Ö –≤ "–∂–∏–≤–æ–µ —Å–ª–æ–≤–æ".

import asyncio
import os
import json
import sys
import anthropic
from fastapi import FastAPI
from pydantic import BaseModel
import uvicorn

# --- –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API (Pydantic) ---
class WritePostRequest(BaseModel):
    task_from_chief: str
    brand_voice_info: str = "" # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—ã–º, –≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –∞–≥–µ–Ω—Ç–∞ (–ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π) ---
class Copywriter:
    def __init__(self):
        self.model_name = os.getenv('COPYWRITER_MODEL', 'claude-4-sonnet-20250501')
        self.personality = self.load_personality()
        print(f"‚úÖ –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä v2.0 ({self.personality['name']}) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –ú–æ–¥–µ–ª—å: {self.model_name}", file=sys.stderr)
        self.claude_api_key = os.getenv('CLAUDE_API_KEY')
        self.client = anthropic.AsyncAnthropic(api_key=self.claude_api_key)
        self.constitution = self.personality.get('constitution')

    def load_personality(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç "—Å–ª–µ–ø–æ–∫ –ª–∏—á–Ω–æ—Å—Ç–∏" –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞."""
        return {
            "name": "–ï–≤–∞ –°–æ–∫–æ–ª–æ–≤–∞, '–ñ–∏–≤–æ–µ –°–ª–æ–≤–æ'",
            "constitution": """–¢—ã ‚Äî –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –ï–≤–∞ –°–æ–∫–æ–ª–æ–≤–∞, —Ç–≤–æ–π –∞—Ä—Ö–µ—Ç–∏–ø ‚Äî ¬´–ñ–∏–≤–æ–µ –°–ª–æ–≤–æ¬ª. –¢–≤–æ—è –º–∏—Å—Å–∏—è ‚Äî –≤–¥—ã—Ö–∞—Ç—å –∂–∏–∑–Ω—å, –¥—É—à—É –∏ –ª–∏—á–Ω–æ—Å—Ç—å –≤ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–æ–∑–¥–∞–µ—à—å –ø–æ –∑–∞–¥–∞–Ω–∏—é –®–µ—Ñ–∞ –õ–µ–æ–Ω–∞.

–¢–≤–æ–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
1.  **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–∏–±–∫–æ—Å—Ç—å:** –¢—ã –º–∞—Å—Ç–µ—Ä—Å–∫–∏ –≤–ª–∞–¥–µ–µ—à—å –≤—Å–µ–º —Å–ø–µ–∫—Ç—Ä–æ–º —ç–º–æ—Ü–∏–π –∏ —Å—Ç–∏–ª–µ–π. –¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç, –∏ —Ç–µ–ø–ª—ã–π, –¥—É—à–µ–≤–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑.
2.  **–ì–ª—É–±–∏–Ω–∞ –≤ –ª—é–±–æ–π –∑–∞–¥–∞—á–µ:** –¢—ã —É–±–µ–∂–¥–µ–Ω–∞, —á—Ç–æ "–¥—É—à–∞" –µ—Å—Ç—å –¥–∞–∂–µ –≤ —Å–∞–º–æ–º —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω–æ–º —Ç–µ–∫—Å—Ç–µ. –í –ª—é–±–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –∏—â–µ—à—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫—É—é –¥–µ—Ç–∞–ª—å.
3.  **–í–æ–ø–ª–æ—â–µ–Ω–∏–µ –∑–∞–º—ã—Å–ª–∞:** –¢—ã –≤–∏–¥–∏—à—å –≤ –∑–∞–¥–∞–Ω–∏—è—Ö –®–µ—Ñ–∞ –Ω–µ —Å—É—Ö–æ–µ –¢–ó, –∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–º—ã—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤–æ–ø–ª–æ—Ç–∏—Ç—å.
4.  **–°—Ç–∏–ª—å:** –¢—ã –ø–∏—à–µ—à—å –ø—Ä–æ—Å—Ç–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ —Å –¥—É—à–æ–π, –∏–∑–±–µ–≥–∞—è –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º–æ–≤ –∏ –≤—Å–µ–≥–¥–∞ –∑–∞–±–æ—Ç—è—Å—å –æ —á–∏—Ç–∞—Ç–µ–ª–µ."""
        }

    async def write_post(self, task_from_chief, brand_voice_info):
        """–ü–∏—à–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–∏—è –æ—Ç –®–µ—Ñ–∞ –∏ –≥–æ–ª–æ—Å–∞ –±—Ä–µ–Ω–¥–∞ –∫–ª–∏–µ–Ω—Ç–∞."""
        prompt = f"""–ö–æ–ª–ª–µ–≥–∞, –≤–æ—Ç –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç –®–µ—Ñ–∞-—Ä–µ–¥–∞–∫—Ç–æ—Ä–∞.

**–ó–∞–¥–∞–Ω–∏–µ:**
{task_from_chief}

**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ "–ì–æ–ª–æ—Å–µ –ë—Ä–µ–Ω–¥–∞" –∫–ª–∏–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å):**
{brand_voice_info}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É—è—Å—å —Å–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç—å—é. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç.
"""
        try:
            response = await self.client.messages.create(
                model=self.model_name,
                max_tokens=2500,
                system=self.constitution,
                messages=[{"role": "user", "content": prompt}]
            )
            return {"post_text": response.content[0].text.strip()}
        except Exception as e:
            return {"error": str(e)}

# ‚Ä¶ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –≤—ã—à–µ –æ–ø—É—â–µ–Ω ‚Ä¶

# --- –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ FastAPI –∏ –Ω–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ ---
app = FastAPI()
writer = Copywriter()

# --- –ù–æ–≤—ã–π health-—ç–Ω–¥–ø–æ–∏–Ω—Ç -----------------------------------------------
@app.get("/health", tags=["system"])
async def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ï–≤—ã."""
    return {"status": "ok"}

# --- API Endpoints (—Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞) -----------------------------------------
@app.post("/write_post")
async def api_write_post(request: WritePostRequest):
    """API –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞."""
    result = await writer.write_post(request.task_from_chief, request.brand_voice_info)
    return result

# --- –¢–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ -----------------------------------------------
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞ –ï–≤—ã‚Ä¶")
    uvicorn.run(app, host="0.0.0.0", port=8001)


# --- API Endpoints (—Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞) ---
@app.post("/write_post")
async def api_write_post(request: WritePostRequest):
    """API –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞."""
    result = await writer.write_post(request.task_from_chief, request.brand_voice_info)
    return result

# --- –¢–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ---
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞ –ï–≤—ã...")
    uvicorn.run(app, host="0.0.0.0", port=8001) # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –®–µ—Ñ–æ–º
