services:
  # 1. Шеф-редактор Леон
  chief-editor:
    build: ./chief-editor
    working_dir: /app
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
    environment:
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      CHIEF_EDITOR_MODEL: google/gemini-2.5-flash
      API_BASE_URL: https://openrouter.ai/api/v1
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    networks: [golden-team-network]
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://127.0.0.1:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    read_only: true
    tmpfs: [/tmp]

  # 2. Копирайтер Ева
  copywriter:
    build: ./copywriter
    working_dir: /app
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
    environment:
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      COPYWRITER_MODEL: claude-sonnet-4-20250514
      API_BASE_URL: https://openrouter.ai/api/v1
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    networks: [golden-team-network]
    ports: ["8001:8001"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://127.0.0.1:8001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    read_only: true
    tmpfs: [/tmp]

 # 3. Дизайнер Адриан
  designer:
    build: ./designer
    working_dir: /app
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
      - ./images:/app/images:rw      # ← добавлен :rw для записи изображений
      - ./results:/app/results:rw    # ← добавлен :rw для записи результатов
    environment:
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      DESIGNER_MODEL: google/gemini-2.5-flash
      API_BASE_URL: https://openrouter.ai/api/v1
      FAL_API_KEY: ${FAL_API_KEY}
      FAL_MODEL: fal-ai/flux-pro
      MAX_TOKENS: 1000
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    networks: [golden-team-network]
    ports: ["8002:8002"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://127.0.0.1:8002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    read_only: false              # ← уже исправлено на false
    tmpfs: [/tmp]

  # 4. Telegram-бот
  telegram-bot:
    build: ./telegram-bot          # Dockerfile лежит в этом каталоге
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - "8003:8000"                # FastAPI внутри слушает 8000
    networks: [golden-team-network]
    restart: unless-stopped
    read_only: true
    tmpfs: [/tmp]
    
  # 5. Chat Coordinator - Единый чат с @-упоминаниями (ЗК 2.0)
  chat-coordinator:
    build: ./chat-coordinator
    working_dir: /app
    volumes:
      - ./client_profiles:/app/client_profiles:ro
      - ./data:/app/data
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    networks: [golden-team-network]
    ports: ["8004:8004"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://127.0.0.1:8004/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    depends_on:
      - chief-editor
      - copywriter
      - designer

networks:
  golden-team-network:
    driver: bridge
